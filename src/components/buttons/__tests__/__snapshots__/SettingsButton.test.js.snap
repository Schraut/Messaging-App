// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Default Round Button renders in dark mode 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "flexDirection": "row",
      "height": 48,
      "justifyContent": "space-between",
      "opacity": 1,
      "paddingHorizontal": 4,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "gap": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "width": 28,
        }
      }
    >
      <View>
        <View />
      </View>
    </View>
    <Text
      style={
        {
          "color": "#FFFFFF",
          "fontFamily": "System",
          "fontSize": 16,
          "fontWeight": "400",
        }
      }
    />
  </View>
</View>
`;

exports[`Default Round Button renders in light mode 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#FFFFFF",
      "flexDirection": "row",
      "height": 48,
      "justifyContent": "space-between",
      "opacity": 1,
      "paddingHorizontal": 4,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "gap": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "width": 28,
        }
      }
    >
      <View>
        <View />
      </View>
    </View>
    <Text
      style={
        {
          "color": "#000000",
          "fontFamily": "System",
          "fontSize": 16,
          "fontWeight": "400",
        }
      }
    />
  </View>
</View>
`;
